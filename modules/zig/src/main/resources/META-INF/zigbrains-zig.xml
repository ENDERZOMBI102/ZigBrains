<!--
  ~ Copyright 2023-2024 FalsePattern
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<idea-plugin package="com.falsepattern.zigbrains.zig">
    <resource-bundle>zigbrains.zig.Bundle</resource-bundle>
    <extensions defaultExtensionNs="com.intellij">
        <!-- region LSP -->

        <!-- register a listener on editor events, required for lsp file sync -->
        <editorFactoryListener implementation="com.falsepattern.zigbrains.lsp.listeners.LSPEditorListener"/>
        <fileDocumentManagerListener implementation="com.falsepattern.zigbrains.lsp.listeners.LSPFileDocumentManagerListener"/>

        <!-- for displaying notifications by lsp -->
        <notificationGroup id="lsp"
                           displayType="STICKY_BALLOON"/>

        <!-- for displaying the statusbar icon -->
        <statusBarWidgetFactory implementation="com.falsepattern.zigbrains.lsp.statusbar.LSPServerStatusWidgetFactory"
                                id="com.falsepattern.zigbrains.lsp.statusbar.LSPServerStatusWidgetFactory"
                                order="first"/>

        <!-- needed for completion -->
        <completion.contributor implementationClass="com.falsepattern.zigbrains.lsp.contributors.LSPCompletionContributor"
                                id="contributors.com.falsepattern.zigbrains.lsp.LSPCompletionContributor"
                                language="any"/>
        <!-- needed for completion as well as signature help -->
        <typedHandler implementation="com.falsepattern.zigbrains.lsp.listeners.LSPTypedHandler"
                      id="LSPTypedHandler"/>

        <!-- needed for code diagnostics -->
        <externalAnnotator id="LSPAnnotator"
                           language="Zig"
                           implementationClass="com.falsepattern.zigbrains.lsp.contributors.annotator.LSPAnnotator"/>

        <!-- needed for Workspace Symbols -->
        <gotoSymbolContributor implementation="com.falsepattern.zigbrains.lsp.contributors.symbol.LSPSymbolContributor"
                               id="LSPSymbolContributor"/>

        <!-- needed for renaming -->
        <renameHandler implementation="com.falsepattern.zigbrains.lsp.contributors.rename.LSPRenameHandler"
                       id="LSPRenameHandler"
                       order="first"/>
        <renamePsiElementProcessor implementation="com.falsepattern.zigbrains.lsp.contributors.rename.LSPRenameProcessor"
                                   id="LSPRenameProcessor"
                                   order="first"/>

        <!-- needed for folding support -->
        <lang.foldingBuilder language="Zig"
                             implementationClass="com.falsepattern.zigbrains.zig.ide.ZigFoldingRangeProvider"
                             id="LSPFoldingRangeProvider"
                             order="first"/>

        <!-- needed for documentation -->
        <platform.backend.documentation.targetProvider implementation="com.falsepattern.zigbrains.lsp.contributors.LSPDocumentationTargetProvider"/>

        <!-- needed for inlay hints -->
        <codeInsight.declarativeInlayProvider implementationClass="com.falsepattern.zigbrains.lsp.contributors.LSPInlayHintProvider"
                                              bundle="zigbrains.zig.Bundle"
                                              nameKey="inlayprovider"
                                              providerId="ZigBrains"
                                              isEnabledByDefault="true"
                                              group="PARAMETERS_GROUP"
                                              language="Zig"/>

        <!-- endregion LSP -->

        <fileType name="Zig File"
                  implementationClass="com.falsepattern.zigbrains.zig.ZigFileType"
                  fieldName="INSTANCE"
                  language="Zig"
                  extensions="zig"/>

        <lang.parserDefinition language="Zig"
                               implementationClass="com.falsepattern.zigbrains.zig.parser.ZigParserDefinition"/>

        <colorSettingsPage implementation="com.falsepattern.zigbrains.zig.highlighter.ZigColorSettingsPage"/>

        <lang.syntaxHighlighterFactory language="Zig"
                                       implementationClass="com.falsepattern.zigbrains.zig.highlighter.ZigSyntaxHighlighterFactory"/>

        <lang.braceMatcher language="Zig"
                           implementationClass="com.falsepattern.zigbrains.zig.pairing.ZigBraceMatcher"/>

        <lang.commenter language="Zig" implementationClass="com.falsepattern.zigbrains.zig.comments.ZigCommenter"/>

        <lang.formatter language="Zig" implementationClass="com.falsepattern.zigbrains.zig.formatter.ZigFormattingModelBuilder"/>

        <projectConfigurable parentId="language"
                             instance="com.falsepattern.zigbrains.zig.settings.ZLSSettingsConfigurable"
                             id="com.falsepattern.zigbrains.zig.settings.ZLSSettingsConfigurable"
                             displayName="ZLS"/>

        <postStartupActivity implementation="com.falsepattern.zigbrains.zig.lsp.ZLSStartupActivity"/>
        <notificationGroup displayType="BALLOON"
                           bundle="zigbrains.zig.Bundle"
                           key="notif-zls"
                           id="ZigBrains.ZLS"/>

        <platform.backend.documentation.linkHandler implementation="com.falsepattern.zigbrains.lsp.contributors.LSPDocumentationLinkHandler"/>
    </extensions>

    <extensions defaultExtensionNs="com.falsepattern.zigbrains">
        <zlsConfigProvider implementation="com.falsepattern.zigbrains.zig.settings.ZLSSettingsConfigProvider"/>
    </extensions>



    <actions>
        <!-- region LSP -->

        <!-- needed for find references -->
        <action class="com.falsepattern.zigbrains.lsp.actions.LSPReferencesAction"
                id="LSPFindUsages">
            <keyboard-shortcut first-keystroke="shift alt F7"
                               keymap="$default"/>
        </action>
        <action class="com.falsepattern.zigbrains.lsp.actions.LSPReformatAction" id="ReformatCode" use-shortcut-of="ReformatCode"
                overrides="true" text="Reformat Code"/>
        <action class="com.falsepattern.zigbrains.lsp.actions.LSPGotoDeclarationAction" id="GotoDeclaration" use-shortcut-of="GotoDeclaration"
                overrides="true" text="Go to Declaration or Usages"/>
        <action class="com.falsepattern.zigbrains.lsp.actions.LSPGotoDefinitionAction" id="QuickImplementations" use-shortcut-of="QuickImplementations"
                overrides="true" text="View Implementations"/>
        <action class="com.falsepattern.zigbrains.lsp.actions.LSPShowReformatDialogAction" id="ShowReformatFileDialog"
                use-shortcut-of="ShowReformatFileDialog" overrides="true" text="Show Reformat File Dialog"/>

        <!-- endregion LSP -->
    </actions>


    <applicationListeners>
        <!-- region LSP -->

        <!-- required for lsp file sync -->
        <listener class="com.falsepattern.zigbrains.lsp.listeners.LSPProjectManagerListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
        <listener class="com.falsepattern.zigbrains.lsp.listeners.VFSListener"
                  topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>

        <!-- endregion LSP -->
    </applicationListeners>
</idea-plugin>